swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Swagger Vuttr"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
- name: "users"
  description: "Operations about user"
- name: "tools"
  description: "Access to tools"
  externalDocs:
    description: ""
    url: "http://swagger.io"
schemes:
- "http"
securityDefinitions:  
   Bearer:    
     type: apiKey    
     name: Authorization    
     in: header
paths:
  /users:
   post:
     tags:
      - "users"
     summary: "Create user"
     description: "Create user."
     produces:
       - "application/json"
     parameters:
       - name: 'users'
         in: "body"
         description: "Created user object"
         required: true
         schema:
           $ref: "#/components/schemas/RequestCreateUser"
     responses:
       "201":
         schema:
           $ref: '#/components/schemas/ResponseCreateUser'
         description: "successful operation" 
  /users/:
   put:
     tags:
      - "users"
     summary: "Update user."
     description: "Update user."
     produces:
       - "application/json"
     parameters:
       - name: 'users'
         in: "body"
         description: "Update user object"
         required: true
         schema:
           $ref: "#/components/schemas/UpdateUser"
     responses:
      "201":
        schema:
          $ref: '#/components/schemas/ResponseCreateUser'
        description: "Successful operation" 
  /sessions:
   post:
    tags: [users]
    summary: "Create session"
    description: 'Returns token for authorized User'
    consumes:
      - "application/json"
    parameters:
      - name: 'login'
        in: 'body'
        required: true
        description: 'Login Payload'
        schema:
          $ref: '#/components/schemas/Login'
    responses:
      "200":
        schema:
          $ref: '#/components/schemas/SuccessLogin'
        description: Token
  /tools/:
   post:
    security:
    - Bearer: []
    tags:
    - "tools"
    summary: "Create an new tool"
    description: "Create an new tool"
    produces:
    - "application/json"
    parameters:
    - in: "body"
      name: "body"
      description: "Create tool"
      required: true
      schema:
        $ref: "#/components/schemas/CreateTool"
    responses:
      "200":
        schema:
          $ref: "#/components/schemas/CreateTool"
        description: "successful operation"
  /tools:
   get:
    security:
    - Bearer: []
    tags:
    - "tools"
    summary: "Returns all tools saves"
    description: "Returns all tools saves"
    produces:
    - "application/json"
    parameters: []
    responses:
      "200":
        schema:
          $ref: "#/components/schemas/GetTool"
        description: "successful operation"
  /tools/{tag}:
   get:
    security:
    - Bearer: []
    tags:
    - "tools"
    summary: "Find purchase tool by tag"
    description: "Find tools inserting a tag"
    produces:
    - "application/json"
    parameters:
    - name: "tag"
      in: "path"
      description: "Tag of tools that needs to be fetched"
      required: true
      type: "integer"
      maximum: 10.0
      minimum: 1.0
      format: "int64"
    responses:
      "200":
        schema:
          $ref: "#/components/schemas/GetTool"
        description: "successful operation"
  /tools/{id}/:
   delete:
    security:
    - Bearer: []
    tags:
    - "tools"
    summary: "Delete a tool by ID"
    description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
    produces:
    - "application/xml"
    - "application/json"
    parameters:
    - name: "id"
      in: "path"
      description: "ID of the tool that needs to be deleted"
      required: true
      type: "integer"
      minimum: 1.0
      format: "int64"
    responses:
      "204":
        description: "successful operation"
definitions:
  Users:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  Tools:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      link:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      tags:
        type: "array"
        items: {}
    xml:
      name: "Tools"
components:
  schemas:
    SuccessLogin:
      type: "object"
      properties:
        User:
           type: "object"
        Token:
          type: string
      required:
        - code
        - message
    Login:
      type: object
      properties:
        email:
           type: "string"
        password:
          type: "string"
      required:
        - email
        - password
    RequestCreateUser:
      type: object
      properties:
        name:
          type: "string"
        email:
           type: "string"
      required:
        - name
        - email
    ResponseCreateUser:
      type: object
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        email:
           type: "string"
    UpdateUser:
      type: object
      properties:
        name:
          type: "string"
        email:
           type: "string"
        password:
           type: "string"
        oldpassword:
           type: "string"
        confirmPassword:
          type: "string"
      required:
        - name
        - email
        - password
        - oldpassword
        - confirmPassword
    CreateTool:
      type: object
      properties:
        title:
          type: "string"
        link:
           type: "string"
        description:
           type: "string"
        tags:
          type: "array"
          items: {}
      required:
        - name
        - email
        - password
        - oldpassword
        - confirmPassword
    GetTool:
      type: object
      properties:
        id:
          type: "integer"
        title:
          type: "string"
        link:
           type: "string"
        description:
           type: "string"
        tags:
          type: "array"
          items: {}
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"